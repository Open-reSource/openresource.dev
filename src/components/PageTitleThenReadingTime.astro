---
import readingTime from 'reading-time';
import type { Props } from '@astrojs/starlight/props';
import Default from '@astrojs/starlight/components/PageTitle.astro';

const { date } = Astro.props.entry.data;
const { entry, lang } = Astro.props;

const isGuide = Astro.props.slug.startsWith('guide');
const displayReadingTime = (isGuide && date) || Astro.props.slug.startsWith('articles') && !Astro.props.slug.startsWith('articles/tags');
const displayDate = date && isGuide;
---

<Default {...Astro.props}><slot /></Default>

{ 
  (displayDate || displayReadingTime) &&
    <div class="meta sl-flex">
      { displayReadingTime && 
        <span class="reading-time">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" role="img">
            <title>Estimated reading time</title>
            <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
          </svg>
          { Math.ceil(readingTime(entry.body).minutes) } min
        </span>
      }
      {
        displayDate &&
        <p>
          <time datetime={date.toISOString()}>
            {date.toLocaleDateString(lang, { dateStyle: 'medium', timeZone: 'UTC' })}
          </time>
        </p>
      }
    </div>
}

<style>
  .meta {
		gap: 0.75rem 3rem;
		justify-content: space-between;
		flex-wrap: wrap;
		font-size: var(--sl-text-sm);
	}

  .reading-time {
    display: inline-flex;
    align-items: center;
  }

  .reading-time svg {
    margin-right: 0.5rem;
  }
</style>

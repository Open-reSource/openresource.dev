---
export interface Props {
	author: string;
	type: string; // 'start' | 'end'
	thinking?: boolean;
}

const { author, thinking, type } = Astro.props;
---

<div class:list={['chat', 'chat-' + type, { 'chat-thinking': thinking }]}>
	<div class="chat-header">
		{author}
		<span class="sr-only">{thinking ? 'thinks' : 'says'}</span>
	</div>
	<div class="chat-bubble">
		<slot />
	</div>
</div>

<style>
	.chat {
		display: grid;
		grid-template-columns: repeat(2, minmax(0, 1fr));
		-moz-column-gap: 0.75rem;
		column-gap: 0.75rem;
		padding-top: 0.25rem;
		padding-bottom: 0.25rem;
	}

	.chat-header {
		grid-row-start: 1;
		font-size: 0.875rem;
		line-height: 1.25rem;
	}

	.chat-bubble {
		position: relative;
		display: block;
		width: -moz-fit-content;
		width: fit-content;
		padding: 0.5rem 1rem;
		max-width: 90%;
		border-radius: 1rem;
		min-height: 2.75rem;
		min-width: 2.75rem;
		font-weight: 600;
		margin-top: 4px !important;
	}

	.chat-bubble:before {
		position: absolute;
		bottom: 0;
		height: 0.75rem;
		width: 0.75rem;
		background-color: inherit;
		content: '';
		-webkit-mask-size: contain;
		mask-size: contain;
		-webkit-mask-repeat: no-repeat;
		mask-repeat: no-repeat;
		-webkit-mask-position: center;
		mask-position: center;
	}

	.chat-start {
		place-items: start;
		grid-template-columns: auto 1fr;
	}

	.chat-start .chat-header,
	.chat-start .chat-footer {
		grid-column-start: 2;
	}

	.chat-start .chat-image {
		grid-column-start: 1;
	}

	.chat-start .chat-bubble {
		grid-column-start: 2;
		border-end-start-radius: 0px;
	}

	.chat-start .chat-bubble:before {
		-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
		mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
		inset-inline-start: -0.749rem;
	}

	[dir='rtl'] .chat-start .chat-bubble:before {
		-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
		mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
	}

	.chat-end {
		place-items: end;
		grid-template-columns: 1fr auto;
	}

	.chat-end .chat-header,
	.chat-end .chat-footer {
		grid-column-start: 1;
	}

	.chat-end .chat-image {
		grid-column-start: 2;
	}

	.chat-end .chat-bubble {
		grid-column-start: 1;
		border-end-end-radius: 0px;
	}

	.chat-end .chat-bubble:before {
		-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
		mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
		inset-inline-start: 99.9%;
	}

	[dir='rtl'] .chat-end .chat-bubble:before {
		-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
		mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
	}

	.chat-start:not(.chat-thinking) .chat-bubble {
		background-color: var(--sl-color-text-accent);
		color: var(--sl-color-text-invert);
	}

	.chat-end:not(.chat-thinking) .chat-bubble {
		background-color: var(--sl-color-secondary-high);
		color: var(--sl-color-black);
	}

	.chat-thinking .chat-bubble {
		border-style: dashed;
		border-width: 2px;
	}

	.chat-start.chat-thinking .chat-bubble {
		border-color: var(--sl-color-text-accent);
	}

	.chat-end.chat-thinking .chat-bubble {
		border-color: var(--sl-color-secondary-high);
	}
</style>

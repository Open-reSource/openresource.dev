[
  [
    {
      "url": "https://github.com/pysnippet/thumbnails",
      "repo": {
        "object": {
          "text": "# Thumbnails <img src=\"https://github.com/pysnippet.png\" align=\"right\" height=\"64\" />\n\n[![PyPI](https://img.shields.io/pypi/v/thumbnails.svg)](https://pypi.org/project/thumbnails/)\n[![Tests Ubuntu | MacOS](https://github.com/pysnippet/thumbnails/actions/workflows/tests.yml/badge.svg)](https://github.com/pysnippet/thumbnails/actions/workflows/tests.yml)\n[![Tests Windows](https://img.shields.io/circleci/build/gh/pysnippet/thumbnails?token=c63e2b94c69393ab3e47a0f20de802fe6265ecf4&label=Tests%20Windows&logo=circleci&logoColor=959da5&labelColor=3e464f)](https://app.circleci.com/pipelines/github/pysnippet/thumbnails)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/ab5414af4c9546fe97ad64365e2a66f0)](https://www.codacy.com?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=pysnippet/thumbnails&amp;utm_campaign=Badge_Grade)\n[![License](https://img.shields.io/pypi/l/thumbnails.svg)](https://github.com/pysnippet/thumbnails/blob/master/LICENSE)\n\nThis tool stands out for its unparalleled optimization for lightning-fast thumbnail generation. By utilizing minimal\nresources, you can generate more in less time. And with a user-friendly CLI and a convenient Python API, this tool is\nthe ultimate solution for efficient and streamlined thumbnail creation.\n\n## Compatible with Major Video Players\n\nModern web video players use the **WebVTT** formatted files to preview thumbnails at a pointed time.\n[WebVTT](https://www.w3.org/TR/webvtt1/) is a format for displaying timed text tracks (such as subtitles or captions).\nOpen-source video players such as [Plyr](https://github.com/sampotts/plyr), [Video.js](https://github.com/videojs/video.js),\n[Flowplayer](https://github.com/flowplayer/flowplayer), [Fluid Player](https://github.com/fluid-player/fluid-player),\nand more, use this format for showing the thumbnails. And, with the use of [external plugins](https://github.com/brightcove/videojs-thumbnails),\nVideo.js even has the capability to handle **JSON** formatted thumbnail metadata. This is where our tool comes in,\noffering the ability to generate the perfect thumbnails to match your needs.\n\n## Features\n\n- Wide-ranging video format compatibility, accommodating all major video formats as input files. (mp4, mkv, avi, mov, ogv, webm, mpeg, mpg, wmv, etc.)\n- Flexible output options, supporting both WebVTT and JSON formats.\n- Generating video thumbnails through the CLI and the Python API.\n- Customize your thumbnail creation to fit your specific needs with various options.\n- Image compression technology, ensuring optimized file sizes for quick and efficient loading times.\n\n## How to Use?\n\n### CLI Tool Usage\n\nThe CLI is a convenient way to generate thumbnails for a video file. And it accepts files or directories as arguments.\nFor the complete list of options, run `thumbnails --help`.\n\n```bash\nthumbnails --base /media/ --output /var/www/movie.com/media/thumbnails/ --interval 5 ~Videos/movies\n```\n\n### Python API Usage\n\nThe Python API provides a flexible way to integrate video thumbnail generation into your existing applications.\nBoth the CLI and the Python API share the same set of options.\n\n```python\nfrom thumbnails import Generator\n\ninputs = (\n    \"~Downloads/movie.mp4\",\n    \"~Videos/movies/1.avi\",\n    \"~Videos/movies/2.ogv\",\n)\n\ngenerator = Generator(inputs)\ngenerator.base = \"/media/\"\ngenerator.skip = True  # skip existing thumbnails\ngenerator.output = \"/var/www/movie.com/media/thumbnails/\"\ngenerator.interval = 5\ngenerator.generate()\n```\n\n## Development\n\nRun the following command in the package's root directory to install it in editable mode.\n```bash\npython3 -m pip install -e .\n```\nThis command will install the package in your local environment and allow you to make changes to the code and see the\nupdates immediately. It will also install all the required dependencies.\n\n## Contribute\n\nEveryone is welcome to contribute to this project. Please read and follow the [contribution guidelines](CONTRIBUTING.md)\nbefore you start. Contributions can be considered:\n- Reporting an issue\n- Opening a pull-request\n- Suggesting an idea at [discussions](https://github.com/pysnippet/thumbnails/discussions)\n- Starring the repository if you like it\n\nBefore you open a PR, please run the unit tests in the local environment to ensure everything is working. You need to\ninstall [tox](https://github.com/tox-dev/tox) and run the tests for configured environments.\n```bash\npython3 -m pip install tox && tox\n```\n\nIf you want to run tests only for the current environment with your local Python interpreter, you can use the following\ncommands.\n\n```bash\npython3 -m pip install -r tests/requirements.txt\npython3 -m pytest\n```\n\n## License\n\nCopyright (C) 2023 Artyom Vancyan. [Apache 2.0](https://github.com/pysnippet/thumbnails/blob/master/LICENSE)\n"
        },
        "description": "Video thumbnail generator for modern web video players such as Plyr, Videojs, Flowplayer, Fluid Player, etc.",
        "openGraphImageUrl": "https://opengraph.githubassets.com/897c2132789d87d5ad4a161ebf768893bc4e4f43d16ce7cf2398afed59613759/pysnippet/thumbnails",
        "issues": {
          "totalCount": 33
        },
        "stargazers": {
          "totalCount": 6
        },
        "pullRequests": {
          "totalCount": 34
        },
        "languages": {
          "nodes": [
            {
              "name": "Python"
            }
          ]
        }
      }
    },
    {
      "url": "https://github.com/pysnippet/django-forbid",
      "repo": {
        "object": {
          "text": "# Django Forbid <img src=\"https://github.com/pysnippet.png\" align=\"right\" height=\"64\" />\n\nSecure your Django app by controlling the access - grant or deny user access based on device and location, including VPN\ndetection.\n\n[![PyPI](https://img.shields.io/pypi/v/django-forbid.svg)](https://pypi.org/project/django-forbid/)\n[![Python](https://img.shields.io/pypi/pyversions/django-forbid.svg?logoColor=white)](https://pypi.org/project/django-forbid/)\n[![Django](https://img.shields.io/pypi/djversions/django-forbid.svg?color=0C4B33&label=django)](https://pypi.org/project/django-forbid/)\n[![License](https://img.shields.io/pypi/l/django-forbid.svg)](https://github.com/pysnippet/django-forbid/blob/master/LICENSE)\n[![Tests](https://github.com/pysnippet/django-forbid/actions/workflows/tests.yml/badge.svg)](https://github.com/pysnippet/django-forbid/actions/workflows/tests.yml)\n\n## Install\n\n```shell\npython -m pip install django-forbid\n```\n\n## Configuration\n\nAdd the `django_forbid.apps.ForbidConfig` to your `INSTALLED_APPS` in your Django project's **settings.py** file.\n\n```python\nINSTALLED_APPS = [\n    ...,  # other apps\n    'django_forbid.apps.ForbidConfig',\n]\n```\n\nAlso, add the `django_forbid.middleware.ForbidMiddleware` to the `MIDDLEWARE` list of the project.\n\n```python\nMIDDLEWARE = [\n    ...,  # other middlewares\n    'django_forbid.middleware.ForbidMiddleware',\n]\n```\n\nConfiguring the `GEOIP_PATH` variable in your project's settings is important. This variable should contain the path to\nthe GeoLite2 database file. You should [download](https://dev.maxmind.com/geoip/geoip2/geolite2/) the database and\nfollow the Django [documentation](https://docs.djangoproject.com/en/2.1/ref/contrib/gis/geoip2/#settings) for proper\nconfiguration.\n\n## Usage\n\nAfter connecting the Django Forbid to your project, you can define the set of desired zones to be forbidden or allowed.\nAll you need is to set the `DJANGO_FORBID` variable in your project's settings. It should be a dictionary with the\nfollowing keys:\n\n- `DEVICES` - list of devices to permit or forbid access to\n- `COUNTRIES` - list of countries to permit or forbid access to\n- `TERRITORIES` - list of territories to permit or forbid access to\n- `OPTIONS` - a dictionary for additional settings\n    - `ACTION` - whether to `PERMIT` or `FORBID` access to the listed zones (default is `FORBID`)\n    - `PERIOD` - time in seconds to check for access again, 0 means on each request\n    - `VPN` - use VPN detection and forbid access to VPN users\n    - `URL` - set of URLs to redirect to when the user is located in a forbidden country or using a VPN\n        - `FORBIDDEN_LOC` - the URL to redirect to when the user is located in a forbidden country\n        - `FORBIDDEN_VPN` - the URL to redirect to when the user is using a VPN\n        - `FORBIDDEN_KIT` - the URL to redirect to when the user is using a forbidden device\n\nUnlike the `COUNTRIES` and `TERRITORIES`, where the middleware decides whether to permit or forbid access based on the\ngiven `ACTION` value, the `DEVICES` list accepts device types where the names starting with `!` are forbidden. This is\ndone to make it possible to make them all mix together.\n\n```python\n# Forbid access to all devices that have a small screen.\n'DEVICES': ['!car', '!player', '!peripheral', '!camera']\n\n# Allow access to all devices having regular or large screens.\n'DEVICES': ['desktop', 'smartphone', 'console', 'tablet', 'tv']\n```\n\nThe available device types are: `smartphone`, `peripheral` - refers to all hardware components that are attached to a\ncomputer, `wearable` - common types of wearable technology include smartwatches and smartglasses, `phablet` - a\nsmartphone having a larger screen, `console` - PlayStation, Xbox, etc., `display`, `speaker` - Google Assistant, Siri,\nAlexa, etc., `desktop`, `tablet`, `camera`, `player` - iPod, Sony Walkman, Creative Zen, etc., `phone`, `car` - refers\nto a car browser and `tv` - refers to TVs having internet access.\n\n```python\nDJANGO_FORBID = {\n    'DEVICES': ['desktop', 'smartphone', 'console', 'tablet', 'tv'],\n    'COUNTRIES': ['US', 'GB'],\n    'TERRITORIES': ['EU'],\n    'OPTIONS': {\n        'ACTION': 'PERMIT',\n        'PERIOD': 300,\n        'VPN': True,\n        'URL': {\n            'FORBIDDEN_LOC': 'forbidden_location',\n            'FORBIDDEN_VPN': 'forbidden_network',\n            'FORBIDDEN_KIT': 'forbidden_device',\n        },\n    },\n}\n```\n\nThe available country codes in the required ISO 3166 alpha-2 format are\nlisted [here](https://www.iban.com/country-codes). And the available continent codes (territories) are: `AF` -\nAfrica, `AN` - Antarctica, `AS` - Asia, `EU` - Europe, `NA` - North America, `OC` - Oceania and `SA` - South America.\n\n_None of the settings are required. If you don't specify any settings, the middleware will not do anything._\n\n## Contribute\n\nAny contribution is welcome. If you have any ideas or suggestions, feel free to open an issue or a pull request. And\ndon't forget to add tests for your changes.\n\n## License\n\nCopyright (C) 2023 Artyom Vancyan. [MIT](https://github.com/pysnippet/django-forbid/blob/master/LICENSE)\n"
        },
        "description": "Secure your Django app by controlling the access - grant or deny user access based on device and location, including VPN detection.",
        "openGraphImageUrl": "https://opengraph.githubassets.com/711f70320d25479922a2af8005dafeee362e1c895bdfd8ddd76f6a8d26975704/pysnippet/django-forbid",
        "issues": {
          "totalCount": 8
        },
        "stargazers": {
          "totalCount": 2
        },
        "pullRequests": {
          "totalCount": 7
        },
        "languages": {
          "nodes": [
            {
              "name": "Python"
            },
            {
              "name": "HTML"
            }
          ]
        }
      }
    },
    {
      "url": "https://github.com/ArtyomVancyan/antd-phone-input",
      "repo": {
        "object": {
          "text": "# antd-phone-input\n\n[![npm](https://img.shields.io/npm/v/antd-phone-input)](https://www.npmjs.com/package/antd-phone-input)\n[![antd](https://img.shields.io/badge/antd-3.x%20%7C%204.x%20%7C%205.x-blue)](https://github.com/ant-design/ant-design)\n[![types](https://img.shields.io/npm/types/antd-phone-input)](https://www.npmjs.com/package/antd-phone-input)\n[![License](https://img.shields.io/npm/l/antd-phone-input)](https://github.com/ArtyomVancyan/antd-phone-input/blob/master/LICENSE)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://makeapullrequest.com)\n[![Tests](https://github.com/ArtyomVancyan/antd-phone-input/actions/workflows/tests.yml/badge.svg)](https://github.com/ArtyomVancyan/antd-phone-input/actions/workflows/tests.yml)\n\nAdvanced phone input component for [Ant Design](https://github.com/ant-design/ant-design) that provides support for all\ncountries and is compatible with [`antd`](https://github.com/ant-design/ant-design) 3 and higher versions. It has\nbuilt-in support for area codes and provides validation to ensure that the entered numbers are valid. This open-source\nproject is designed to simplify the process of collecting phone numbers from users.\n\n## Install\n\n```shell\nnpm i antd-phone-input\n```\n\n```shell\nyarn add antd-phone-input\n```\n\n## Usage\n\nAs mentioned above, this component is compatible with `3.x`, `4.x`, and after\nthe [v0.1.4](https://github.com/ArtyomVancyan/antd-phone-input/releases/tag/v0.1.4) release, `5.x` versions of Ant\nDesign. The latest one does not require any additional actions for loading the styles as it\nuses [`cssinjs`](https://github.com/ant-design/cssinjs) ecosystem.\n\n### Antd 5.x\n\n```javascript\nimport React from \"react\";\nimport FormItem from \"antd/es/form/FormItem\";\nimport PhoneInput from \"antd-phone-input\";\n\nconst Demo = () => {\n  return (\n    <FormItem name=\"phone\">\n      <PhoneInput enableSearch/>\n    </FormItem>\n  )\n}\n```\n\n![latest](https://user-images.githubusercontent.com/44609997/227775101-72b03e76-52bc-421d-8e75-a03c9d0d6d08.png)\n\n### Antd 4.x and older\n\nFor `4.x` and older versions, you should use the `legacy` endpoint.\n\n```javascript\nimport PhoneInput from \"antd-phone-input/legacy\";\n```\n\nFor including the styles, you should import them in the main `less` file after importing either\nthe `antd/dist/antd.less` or `antd/dist/antd.dark.less` styles.\n\n```diff\n@import \"~antd/dist/antd\";\n+ @import \"~antd-phone-input/legacy/style\";\n```\n\n![legacy](https://user-images.githubusercontent.com/44609997/227775155-9e22bc63-2148-4714-ba8a-9bb4e44c0128.png)\n\n## Value\n\nThe value of the component is an object containing the parts of a phone number. This format of value gives a wide range\nof opportunities for handling the data in your custom way. For example, you can easily merge the parts of the phone\nnumber into a single string.\n\n```json\n{\n  \"countryCode\": 1,\n  \"areaCode\": 702,\n  \"phoneNumber\": \"1234567\",\n  \"isoCode\": \"us\",\n  \"valid\": true\n}\n```\n\n## Validation\n\nThe `valid` property of the value object shows the real-time validity of the phone number depending on the country. So\nthis can be used in a `validator` like this:\n\n```javascript\nconst validator = (_, {valid}) => {\n  if (valid) {\n    return Promise.resolve();\n  }\n  return Promise.reject(\"Invalid phone number\");\n}\n\nreturn (\n  <FormItem rules={[{validator}]}>\n    <PhoneInput/>\n  </FormItem>\n)\n```\n\n## Props\n\n| Property           | Description                                                                                                                     | Type                |\n|--------------------|---------------------------------------------------------------------------------------------------------------------------------|---------------------|\n| size               | Either `large`, `middle` or `small`. Default value is `middle`. See at ant [docs][antInputProps] for more.                      | string              |\n| value              | An object containing the parts of phone number. E.g. `value={{countryCode: 1, areaCode: 702, phoneNumber: \"1234567\"}}`.         | object              |\n| style              | Applies CSS styles to the container element.                                                                                    | CSSProperties       |\n| className          | The value will be assigned to the container element.                                                                            | string              |\n| disabled           | Disables the whole input component.                                                                                             | boolean             |\n| enableSearch       | Enables search in the country selection dropdown menu. Default value is `false`.                                                | boolean             |\n| disableDropdown    | Disables the manual country selection through the dropdown menu.                                                                | boolean             |\n| inputProps         | [HTML properties of input][htmlInputProps] to pass into the input.  E.g. `inputProps={{autoFocus: true}}`.                      | InputHTMLAttributes |\n| searchPlaceholder  | The value is shown if `enableSearch` is `true`. Default value is `search`.                                                      | string              |\n| searchNotFound     | The value is shown if `enableSearch` is `true` and the query does not match any country. Default value is `No entries to show`. | string              |\n| placeholder        | Custom placeholder. Default placeholder is `1 (702) 123-4567`.                                                                  | string              |\n| country            | Country code to be selected by default. By default, it will show the flag of the user's country.                                | string              |\n| regions            | Show only the countries of the specified regions. See the list of [available regions][reactPhoneRegions].                       | string[]            |\n| onlyCountries      | Country codes to be included in the list. E.g. `onlyCountries={['us', 'ca', 'uk']}`.                                            | string[]            |\n| excludeCountries   | Country codes to be excluded from the list of countries. E.g. `excludeCountries={['us', 'ca', 'uk']}`.                          | string[]            |\n| preferredCountries | Country codes to be at the top of the list. E.g. `preferredCountries={['us', 'ca', 'uk']}`.                                     | string[]            |\n| onChange           | Callback when the user is inputting. See at ant [docs][antInputProps] for more.                                                 | function(value, e)  |\n| onPressEnter       | The callback function that is triggered when <kbd>Enter</kbd> key is pressed.                                                   | function(e)         |\n| onFocus            | The callback is triggered when the input element is focused.                                                                    | function(e, value)  |\n| onClick            | The callback is triggered when the user clicks on the input element.                                                            | function(e, value)  |\n| onBlur             | The callback is triggered when the input element gets blurred or unfocused.                                                     | function(e, value)  |\n| onKeyDown          | The callback is triggered when any key is pressed down.                                                                         | function(e)         |\n| onMount            | The callback is triggered once the component gets mounted.                                                                      | function(e)         |\n\n## Contribute\n\nAny contribution is welcome. If you have any ideas or suggestions, feel free to open an issue or a pull request. And\ndon't forget to add tests for your changes.\n\n## License\n\nCopyright (C) 2023 Artyom Vancyan. [MIT](LICENSE)\n\n[antInputProps]:https://ant.design/components/input#input\n\n[reactPhoneRegions]:https://github.com/bl00mber/react-phone-input-2#regions\n\n[htmlInputProps]:https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attributes\n"
        },
        "description": "Advanced Phone Number Input for Ant Design",
        "openGraphImageUrl": "https://opengraph.githubassets.com/f8611ee6685167ffb35d2de9d592459c1c09b8a87ea6392f8fb736407b5d507f/ArtyomVancyan/antd-phone-input",
        "issues": {
          "totalCount": 17
        },
        "stargazers": {
          "totalCount": 1
        },
        "pullRequests": {
          "totalCount": 16
        },
        "languages": {
          "nodes": [
            {
              "name": "TypeScript"
            },
            {
              "name": "Less"
            },
            {
              "name": "CSS"
            }
          ]
        }
      }
    }
  ]
]